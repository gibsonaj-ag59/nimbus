version: '3.8'
services:
  vredis: # Redis container
    build:
      context: ./
      dockerfile: ./nodes/nimbus_store/redis/dockerfile
    networks:
      nmbs:
        aliases:
          - redis.nimbus
    healthcheck:
      test: ["CMD", "redis-cli", "AUTH", "nimbus", "CSFDcode123"]
      interval: 3s
    environment:
      REDIS_HOSTNAME: redis.nimbus
  npostgres: # PostgreSQL container
    hostname: postgres.nimbus
    build:
      context: ./
      dockerfile: ./nodes/nimbus_store/postgres/dockerfile
    ports:
      - "5432:5432"
    networks:
      nmbs:
        aliases:
          - postgres.nimbus
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "postgres.nimbus", "-p", "5432", "-U", "nimbus", "-d", "nimbus"]
      interval: 3s
      start_period: 60s
    environment:
      POSTGRES_DB: nimbus
      POSTGRES_USER: nimbus
      POSTGRES_PASSWORD: CSFDcode123
  # Uncomment the following section to add a Microsoft SQL Server container
  ################################################
  # vmssql:
  #   hostname: mssql.nimbus
  #   build:
  #     context: .nodes/nimbus_store/mssql
  #     dockerfile: Dockerfile
  #   ports:
  #     - "1433:1433"
  #   networks:
  #     nmbs:
  #       aliases:
  #         - mssql.nimbus
  #   healthcheck:
  #     test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-C", "-S", "mssql.nimbus,1433", "-U", "nimbus", "-P", "CSFDcode123", "-d", "nimbus"]
  #     interval: 3s
  #     start_period: 60s
  napi: # API container
    hostname: api.nimbus
    build:
      context: ./
      dockerfile: ./nodes/nimbus_share/api/dockerfile
    ports:
      - "5554:5554"
    networks:
      nmbs:
        aliases:
          - api.nimbus
    restart: always
    environment:
      CONFIG_NAME: api
      DEVICE_NAME: sample
  ndev: # Development container
    hostname: dev.nimbus
    build:
      context: ./
      dockerfile: ./nodes/nimbus_develop/dev/dockerfile
    ports:
      - "5552:5552"
    networks:
      nmbs:
        aliases:
          - dev.nimbus
    restart: always
    environment:
      CONFIG_NAME: api
      DEVICE_NAME: sample
    volumes:
      - nmbs_code:/app/bootstrap_service/static
    # Uncomment the following lines to use the Microsoft SQL Server container. Allows time for start up. Must uncomment SQL Server container above.
    # depends_on:
    #   mssql:
    #     condition: service_healthy
  nconfig: # Configuration container
    hostname: config.nimbus
    build:
      context: ./
      dockerfile: ./nodes/nimbus_config/config/dockerfile
    ports:
      - "5555:5555"
    networks:
      nmbs:
        aliases:
          - config.nimbus
    environment:
      REDIS_HOST: redis.nimbus
      REDIS_PORT: 6379
      REDIS_USERNAME: default
      REDIS_PASSWORD: CSFDcode123
      REDIS_SSL_VERIFY: False
      REDIS_SSL_CERTFILE: None
      REDIS_SSL_KEYFILE: None
      REDIS_SSL_CA_CERTS: None
  # For new models duplicate the below, changing the CONFIG_NAME and DEVICE_NAME for each model according to the .json file
  ################################################
  nsample: # Model container
    hostname: sample.nimbus
    build:
      context: ./
      dockerfile: ./nodes/nimbus_config/model/dockerfile
    ports:
      - "5556:5556"
    networks:
      nmbs:
        aliases:
          - sample.nimbus
    depends_on:
      nconfig:
        condition: service_started
      npostgres:
        condition: service_healthy
    environment:
      MODEL_NAME: sample
      CONFIG_NAME: model
      DB_DIALECT_DRIVER: postgresql
      DB_HOST: postgres.nimbus
      DB_PORT: 5432
      DB_NAME: nimbus
      DB_USER: nimbus
      DB_PASS: CSFDcode123
  nformat: # Format container
    hostname: format.nimbus
    build:
      context: ./
      dockerfile: ./nodes/nimbus_format/format/dockerfile
    ports:
      - "5553:5553"
    networks:
      nmbs:
        aliases:
          - format.nimbus
    depends_on:
      nconfig:
        condition: service_started
    environment:
      CONFIG_NAME: format
  vscode: # VS Code container
    hostname: code.nimbus
    build:
      context: ./
      dockerfile: ./nodes/nimbus_develop/vs_code_service/dockerfile
    ports:
      - "5551:5551"
    networks:
      nmbs:
        aliases:
          - code.nimbus
    environment:
      NODE_NAME: vs-code-1
    volumes:
      - nmbs_code:/workspace
  ngitlab:
    image: gitlab/gitlab-ce:latest
    hostname: 'gitlab.nimbus'
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://gitlab.nimbus:8080'
        gitlab_rails['gitlab_shell_ssh_port'] = 2222
        nginx['listeport'] = 80
        nginx['listehttps'] = false
    ports:
      - "8080:80"
      - "443:443"
      - "2222:22"
    volumes:
      - gitlab-config:/etc/gitlab
      - gitlab-logs:/var/log/gitlab
      - gitlab-data:/var/opt/gitlab
    restart: always
    networks:
      nmbs:
        aliases:
          - gitlab.nimbus
  
networks:
  nmbs:
    attachable: true

volumes:
  gitlab-config:
  gitlab-logs:
  gitlab-data:
  nmbs_data:
  nmbs_logs:
  nmbs_config:
  nmbs_code: